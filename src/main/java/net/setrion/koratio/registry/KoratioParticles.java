package net.setrion.koratio.registry;

import net.minecraft.core.particles.ParticleType;
import net.minecraft.core.particles.SimpleParticleType;
import net.minecraft.core.registries.BuiltInRegistries;
import net.neoforged.neoforge.registries.DeferredHolder;
import net.neoforged.neoforge.registries.DeferredRegister;
import net.setrion.koratio.Koratio;

public class KoratioParticles {
	
	public static final DeferredRegister<ParticleType<?>> PARTICLES = DeferredRegister.create(BuiltInRegistries.PARTICLE_TYPE, Koratio.MOD_ID);
	
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> GOLD_GLINT = PARTICLES.register("gold_glint", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> ELVEN_LEAVES = PARTICLES.register("elven_leaves", () -> new SimpleParticleType(false));

	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_WHITE_SUGAR = PARTICLES.register("dripping_white_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_WHITE_SUGAR = PARTICLES.register("falling_white_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> LANDING_WHITE_SUGAR = PARTICLES.register("landing_white_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_DRIPSTONE_WHITE_SUGAR = PARTICLES.register("dripping_dripstone_white_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_DRIPSTONE_WHITE_SUGAR = PARTICLES.register("falling_dripstone_white_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_LIGHT_GRAY_SUGAR = PARTICLES.register("dripping_light_gray_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_LIGHT_GRAY_SUGAR = PARTICLES.register("falling_light_gray_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> LANDING_LIGHT_GRAY_SUGAR = PARTICLES.register("landing_light_gray_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_DRIPSTONE_LIGHT_GRAY_SUGAR = PARTICLES.register("dripping_dripstone_light_gray_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_DRIPSTONE_LIGHT_GRAY_SUGAR = PARTICLES.register("falling_dripstone_light_gray_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_GRAY_SUGAR = PARTICLES.register("dripping_gray_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_GRAY_SUGAR = PARTICLES.register("falling_gray_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> LANDING_GRAY_SUGAR = PARTICLES.register("landing_gray_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_DRIPSTONE_GRAY_SUGAR = PARTICLES.register("dripping_dripstone_gray_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_DRIPSTONE_GRAY_SUGAR = PARTICLES.register("falling_dripstone_gray_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_BLACK_SUGAR = PARTICLES.register("dripping_black_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_BLACK_SUGAR = PARTICLES.register("falling_black_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> LANDING_BLACK_SUGAR = PARTICLES.register("landing_black_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_DRIPSTONE_BLACK_SUGAR = PARTICLES.register("dripping_dripstone_black_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_DRIPSTONE_BLACK_SUGAR = PARTICLES.register("falling_dripstone_black_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_BROWN_SUGAR = PARTICLES.register("dripping_brown_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_BROWN_SUGAR = PARTICLES.register("falling_brown_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> LANDING_BROWN_SUGAR = PARTICLES.register("landing_brown_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_DRIPSTONE_BROWN_SUGAR = PARTICLES.register("dripping_dripstone_brown_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_DRIPSTONE_BROWN_SUGAR = PARTICLES.register("falling_dripstone_brown_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_RED_SUGAR = PARTICLES.register("dripping_red_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_RED_SUGAR = PARTICLES.register("falling_red_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> LANDING_RED_SUGAR = PARTICLES.register("landing_red_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_DRIPSTONE_RED_SUGAR = PARTICLES.register("dripping_dripstone_red_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_DRIPSTONE_RED_SUGAR = PARTICLES.register("falling_dripstone_red_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_ORANGE_SUGAR = PARTICLES.register("dripping_orange_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_ORANGE_SUGAR = PARTICLES.register("falling_orange_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> LANDING_ORANGE_SUGAR = PARTICLES.register("landing_orange_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_DRIPSTONE_ORANGE_SUGAR = PARTICLES.register("dripping_dripstone_orange_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_DRIPSTONE_ORANGE_SUGAR = PARTICLES.register("falling_dripstone_orange_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_YELLOW_SUGAR = PARTICLES.register("dripping_yellow_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_YELLOW_SUGAR = PARTICLES.register("falling_yellow_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> LANDING_YELLOW_SUGAR = PARTICLES.register("landing_yellow_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_DRIPSTONE_YELLOW_SUGAR = PARTICLES.register("dripping_dripstone_yellow_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_DRIPSTONE_YELLOW_SUGAR = PARTICLES.register("falling_dripstone_yellow_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_LIME_SUGAR = PARTICLES.register("dripping_lime_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_LIME_SUGAR = PARTICLES.register("falling_lime_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> LANDING_LIME_SUGAR = PARTICLES.register("landing_lime_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_DRIPSTONE_LIME_SUGAR = PARTICLES.register("dripping_dripstone_lime_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_DRIPSTONE_LIME_SUGAR = PARTICLES.register("falling_dripstone_lime_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_GREEN_SUGAR = PARTICLES.register("dripping_green_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_GREEN_SUGAR = PARTICLES.register("falling_green_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> LANDING_GREEN_SUGAR = PARTICLES.register("landing_green_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_DRIPSTONE_GREEN_SUGAR = PARTICLES.register("dripping_dripstone_green_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_DRIPSTONE_GREEN_SUGAR = PARTICLES.register("falling_dripstone_green_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_CYAN_SUGAR = PARTICLES.register("dripping_cyan_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_CYAN_SUGAR = PARTICLES.register("falling_cyan_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> LANDING_CYAN_SUGAR = PARTICLES.register("landing_cyan_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_DRIPSTONE_CYAN_SUGAR = PARTICLES.register("dripping_dripstone_cyan_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_DRIPSTONE_CYAN_SUGAR = PARTICLES.register("falling_dripstone_cyan_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_LIGHT_BLUE_SUGAR = PARTICLES.register("dripping_light_blue_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_LIGHT_BLUE_SUGAR = PARTICLES.register("falling_light_blue_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> LANDING_LIGHT_BLUE_SUGAR = PARTICLES.register("landing_light_blue_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_DRIPSTONE_LIGHT_BLUE_SUGAR = PARTICLES.register("dripping_dripstone_light_blue_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_DRIPSTONE_LIGHT_BLUE_SUGAR = PARTICLES.register("falling_dripstone_light_blue_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_BLUE_SUGAR = PARTICLES.register("dripping_blue_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_BLUE_SUGAR = PARTICLES.register("falling_blue_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> LANDING_BLUE_SUGAR = PARTICLES.register("landing_blue_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_DRIPSTONE_BLUE_SUGAR = PARTICLES.register("dripping_dripstone_blue_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_DRIPSTONE_BLUE_SUGAR = PARTICLES.register("falling_dripstone_blue_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_PURPLE_SUGAR = PARTICLES.register("dripping_purple_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_PURPLE_SUGAR = PARTICLES.register("falling_purple_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> LANDING_PURPLE_SUGAR = PARTICLES.register("landing_purple_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_DRIPSTONE_PURPLE_SUGAR = PARTICLES.register("dripping_dripstone_purple_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_DRIPSTONE_PURPLE_SUGAR = PARTICLES.register("falling_dripstone_purple_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_MAGENTA_SUGAR = PARTICLES.register("dripping_magenta_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_MAGENTA_SUGAR = PARTICLES.register("falling_magenta_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> LANDING_MAGENTA_SUGAR = PARTICLES.register("landing_magenta_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_DRIPSTONE_MAGENTA_SUGAR = PARTICLES.register("dripping_dripstone_magenta_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_DRIPSTONE_MAGENTA_SUGAR = PARTICLES.register("falling_dripstone_magenta_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_PINK_SUGAR = PARTICLES.register("dripping_pink_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_PINK_SUGAR = PARTICLES.register("falling_pink_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> LANDING_PINK_SUGAR = PARTICLES.register("landing_pink_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DRIPPING_DRIPSTONE_PINK_SUGAR = PARTICLES.register("dripping_dripstone_pink_sugar", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> FALLING_DRIPSTONE_PINK_SUGAR = PARTICLES.register("falling_dripstone_pink_sugar", () -> new SimpleParticleType(false));

	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> RAINBOW_FIRE_FLAME = PARTICLES.register("rainbow_fire_flame", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> SMALL_RAINBOW_FIRE_FLAME = PARTICLES.register("small_rainbow_fire_flame", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> RAINBOW_LAVA = PARTICLES.register("rainbow_lava", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DEMONIC_FIRE_FLAME = PARTICLES.register("demonic_fire_flame", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> DEMONIC_SOUL = PARTICLES.register("demonic_soul", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> TELEPORTER_ASCEND = PARTICLES.register("teleporter_ascend", () -> new SimpleParticleType(false));
	public static final DeferredHolder<ParticleType<?>, SimpleParticleType> TELEPORTER_DESCEND = PARTICLES.register("teleporter_descend", () -> new SimpleParticleType(false));
}